[{"C:\\Users\\arjun\\Desktop\\practice\\random_song_generator\\client\\src\\App.js":"1","C:\\Users\\arjun\\Desktop\\practice\\random_song_generator\\client\\src\\reportWebVitals.js":"2"},{"size":2924,"mtime":1610990394251,"results":"3","hashOfConfig":"4"},{"size":362,"mtime":1610570366648,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"nq0dab",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\arjun\\Desktop\\practice\\random_song_generator\\client\\src\\App.js",["11","12","13","14","15","16","17","18","19"],"import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from 'axios'\nfunction App() {\n  const [song, setSong] = useState(\"Click below!\");\n  const [image, setImage] = useState('')\n  const [load, setLoad] = useState('Generate')\n  const [location, setLocation] = useState('US')\n  const [history, setHistory]=  useState([])\n  const myRef = useRef(null)\n  var token;\n  useEffect(() => {\n    const auth = async () => {\n      const result = await axios.post(\n        `/spotify-client-auth`,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          withCredentials: true,\n        }\n      );\n      //console.log(result)\n      token = result.access_token\n    };\n    auth();\n  }, []);\n\n\n  const handleClick = async(e) => {\n\n    e.preventDefault()\n    window.scrollTo(0, 0)\n    setLoad('Loading...')\n    //var searchstring = randomstring();\n    const result = await axios.post(\n      `/generate`,\n      {location: location},\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        withCredentials: true,\n      }\n    );\n\n    var status = result.data.status\n    if(status>=400){\n      window.location.reload();\n    }\n    else{\n      var {song, artists, image} = result.data\n      setImage(image)\n      setSong(`${song} - ${artists}`)\n      const hist = [{song: song, artists : artists, image:image}, ...history]\n      if(hist.length>7)\n        hist.pop()\n      setHistory(hist)\n      console.log(history)\n    }\n    //setLoad('Generate')\n  }\n  const loader = () => {\n    setLoad('Generate')\n  }\n\n  const loadPreviousSong = (i,e) => {\n    if(i==0)\n      return\n    console.log(i)\n    setSong(`${history[i][\"song\"]} - ${history[i][\"artists\"]}`)\n    setImage(history[i][\"image\"])\n    var hist = history\n    var cur = hist[i]\n    hist.splice(i,1)\n    hist.splice(0,0,cur)\n    setHistory(hist)\n\n  }\n\n  const executeScroll = () => myRef.current.scrollIntoView() \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p className=\"header\">Generate Random Song</p>\n        <img src={image == '' ?logo : image} className=\"img\" alt=\"logo\" onLoad={loader}/>\n        <p>\n          {song}\n        </p>\n        <a\n          className=\"App-link\"\n          target=\"_blank\"\n          onClick={handleClick}\n        >\n          {load}\n        </a>\n        <br></br>\n          {(history.length == 0) ? (<></>): (<a className=\"App-link\" onClick={executeScroll}>History</a>)}\n        \n        </header>\n      <b>\n          History\n        </b>\n        <br></br>\n        <div className=\"history\" ref={myRef}>\n        \n        {history.map((e,i)=> {\n          return(<>\n          <li><a className=\"prevSongs\" key={i} onClick={(e) => loadPreviousSong(i,e)}>{e.song}</a> \n          <br></br></li>\n          </>)\n        })}\n        </div>\n       \n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\arjun\\Desktop\\practice\\random_song_generator\\client\\src\\reportWebVitals.js",[],{"ruleId":"20","severity":1,"message":"21","line":9,"column":20,"nodeType":"22","messageId":"23","endLine":9,"endColumn":31},{"ruleId":"20","severity":1,"message":"24","line":25,"column":7,"nodeType":"22","messageId":"23","endLine":25,"endColumn":12},{"ruleId":"25","severity":1,"message":"26","line":25,"column":15,"nodeType":"27","endLine":25,"endColumn":34},{"ruleId":"28","severity":1,"message":"29","line":69,"column":9,"nodeType":"30","messageId":"31","endLine":69,"endColumn":11},{"ruleId":"28","severity":1,"message":"29","line":87,"column":25,"nodeType":"30","messageId":"31","endLine":87,"endColumn":27},{"ruleId":"32","severity":1,"message":"33","line":91,"column":9,"nodeType":"34","endLine":95,"endColumn":10},{"ruleId":"28","severity":1,"message":"29","line":99,"column":28,"nodeType":"30","messageId":"31","endLine":99,"endColumn":30},{"ruleId":"32","severity":1,"message":"33","line":99,"column":46,"nodeType":"34","endLine":99,"endColumn":94},{"ruleId":"32","severity":1,"message":"33","line":110,"column":15,"nodeType":"34","endLine":110,"endColumn":87},"no-unused-vars","'setLocation' is assigned a value but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'token' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]