[{"C:\\Users\\arjun\\Desktop\\practice\\random_song_generator\\client\\src\\App.js":"1","C:\\Users\\arjun\\Desktop\\practice\\random_song_generator\\client\\src\\reportWebVitals.js":"2"},{"size":2398,"mtime":1610585278202,"results":"3","hashOfConfig":"4"},{"size":362,"mtime":1610570366648,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"nq0dab",{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\arjun\\Desktop\\practice\\random_song_generator\\client\\src\\App.js",["10","11","12","13","14","15"],"C:\\Users\\arjun\\Desktop\\practice\\random_song_generator\\client\\src\\reportWebVitals.js",[],{"ruleId":"16","severity":1,"message":"17","line":21,"column":7,"nodeType":"18","messageId":"19","endLine":21,"endColumn":12},{"ruleId":"20","severity":1,"message":"21","line":21,"column":15,"nodeType":"22","endLine":21,"endColumn":34},{"ruleId":"23","severity":1,"message":"24","line":33,"column":5,"nodeType":"25","messageId":"26","endLine":40,"endColumn":6},{"ruleId":"27","severity":1,"message":"28","line":62,"column":20,"nodeType":"29","messageId":"30","endLine":62,"endColumn":22},{"ruleId":"27","severity":1,"message":"28","line":74,"column":25,"nodeType":"29","messageId":"30","endLine":74,"endColumn":27},{"ruleId":"31","severity":1,"message":"32","line":78,"column":9,"nodeType":"33","endLine":83,"endColumn":10},"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'token' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]